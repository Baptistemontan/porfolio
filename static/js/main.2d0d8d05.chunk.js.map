{"version":3,"sources":["components/Menu.jsx","components/pages/Home.jsx","components/pages/Work.jsx","components/pages/Contacts.jsx","components/Index.jsx","components/pages/About.jsx","App.js","serviceWorker.js","index.js"],"names":["Menu","props","handleButton","state","active","setState","name","this","onClick","pages","current","classShow","classBtnShow","className","map","page","url","key","to","handleLink","Component","Home","id","href","Projects","imageName","link","github","description","contacts","Pages","component","class","projet","src","alt","contact","Index","handleMenuClick","currentPage","exact","path","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2d0d8d05.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, BrowserRouter as Router } from \"react-router-dom\";\r\n\r\n// export default function Menu({ onClick, names, current }) {\r\nexport default class Menu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      active: false\r\n    };\r\n  }\r\n  handleButton = () => {\r\n    if (this.state.active) {\r\n      this.setState({ active: false });\r\n    } else {\r\n      this.setState({ active: true });\r\n    }\r\n  };\r\n  handleLink(name) {\r\n    this.props.onClick(name);\r\n    this.setState({ active: false });\r\n  }\r\n  render() {\r\n    const { pages, current } = this.props;\r\n    const classShow = this.state.active ? \" show\" : \"\";\r\n    const classBtnShow = this.state.active ? \" close\" : \"\";\r\n    return (\r\n      <header className=\"noselect\">\r\n        <div className={\"menu-btn\" + classBtnShow} onClick={this.handleButton}>\r\n          <div className=\"btn-line\"></div>\r\n          <div className=\"btn-line\"></div>\r\n          <div className=\"btn-line\"></div>\r\n        </div>\r\n        <nav className={\"menu\" + classShow}>\r\n          <div className={\"menu-branding\" + classShow}>\r\n            <div className=\"portrait\"></div>\r\n          </div>\r\n          <div className={\"menu-branding-background\" + classShow}></div>\r\n          <ul className={\"menu-nav\" + classShow}>\r\n            {pages.map(page => {\r\n              const className =\r\n                \"nav-item\" + (page.url === current ? \" current\" : \"\");\r\n              return (\r\n                <li className={className + classShow} key={page.url}>\r\n                  <Link\r\n                    to={\"/\" + page.url}\r\n                    className=\"nav-link\"\r\n                    onClick={() => this.handleLink(page.url)}\r\n                  >\r\n                    {page.name}\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <main id=\"home\">\r\n      <h1 className=\"lg-heading\">\r\n        Baptiste\r\n        <br />\r\n        <span className=\"text-secondary\">de Montangon</span>\r\n      </h1>\r\n      <h2 className=\"sm-heading\">Web Developer & Programmer</h2>\r\n      <div className=\"icons\">\r\n        <a href=\"https://twitter.com/baptistemontan\">\r\n          <i className=\"fab fa-twitter fa-2x\"></i>\r\n        </a>\r\n        <a href=\"https://www.facebook.com/baptiste.montan\">\r\n          <i className=\"fab fa-facebook fa-2x\"></i>\r\n        </a>\r\n        <a href=\"https://www.linkedin.com/in/baptiste-d-15a0b0130\">\r\n          <i className=\"fab fa-linkedin fa-2x\"></i>\r\n        </a>\r\n        <a href=\"https://github.com/Baptistemontan\">\r\n          <i className=\"fab fa-github fa-2x\"></i>\r\n        </a>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst Projects = [\r\n  {\r\n    name: \"MineSweeper\",\r\n    imageName: \"minesweeper.png\",\r\n    link: \"\",\r\n    github: \"\",\r\n    description: \"\"\r\n  },\r\n  {\r\n    name: \"PathFinder\",\r\n    imageName: \"pathfinder.png\",\r\n    link: \"https://baptistemontan.github.io/pathfinder-react/\",\r\n    github: \"https://github.com/Baptistemontan/pathfinder-react\",\r\n    description: \"\"\r\n  }\r\n];\r\n\r\nexport default function Work() {\r\n  return (\r\n    <main id=\"work\">\r\n      <h1 className=\"lg-heading\">\r\n        My<span class=\"text-secondary\"> Work</span>\r\n      </h1>\r\n      <h2 className=\"sm-heading\">here is some of my projects :</h2>\r\n      <div className=\"projects\">\r\n        {Projects.map(projet => {\r\n          return (\r\n            <div className=\"item\" key={projet.name}>\r\n              <a className=\"square\" href={projet.link}>\r\n                <img src={\"./images/\" + projet.imageName} alt=\"project\" />\r\n                <div>\r\n                  <div>\r\n                    <p>{projet.description}</p>\r\n                  </div>\r\n                </div>\r\n              </a>\r\n              <a href={projet.link} className=\"btn-light\">\r\n                <i className=\"fas fa-eye\"></i>\r\n                {projet.name}\r\n              </a>\r\n              <a href={projet.github} className=\"btn-dark\">\r\n                <i className=\"fab fa-github\"></i>GitHub\r\n              </a>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst contacts = [\r\n  [\"Email\", \"baptiste@demontangon.fr\"],\r\n  [\"Phone\", \"(+33)0678568958\"],\r\n  [\"Address\", \"16 Avenue du colonel Bonnet, 75016 Paris\"]\r\n];\r\n\r\nexport default function Contacts() {\r\n  return (\r\n    <main id=\"contact\">\r\n      <h1 class=\"lg-heading\">\r\n        Contact<span class=\"text-secondary\"> Me</span>\r\n      </h1>\r\n      <h2 class=\"sm-heading\">Here is how you can reach me :</h2>\r\n      <div class=\"boxes\">\r\n        {contacts.map(contact => (\r\n          <div>\r\n            <span class=\"text-secondary\">{contact[0]} :</span> {contact[1]}\r\n          </div>\r\n        ))}\r\n        {/* <div>\r\n          <span class=\"text-secondary\">Email :</span> baptiste@demontangon.fr\r\n        </div>\r\n        <div>\r\n          <span class=\"text-secondary\">Phone :</span> (+33)0678568958\r\n        </div>\r\n        <div>\r\n          <span class=\"text-secondary\">Address :</span> 16 Avenue du colonel\r\n          Bonnet, 75016 Paris\r\n        </div> */}\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Menu from \"./Menu\";\r\nimport Home from \"./pages/Home\";\r\nimport About from \"./pages/About\";\r\nimport Work from \"./pages/Work\";\r\nimport Contacts from \"./pages/Contacts\";\r\nimport { Route, HashRouter as Router, Switch } from \"react-router-dom\";\r\n\r\nconst Pages = [\r\n  { name: \"Home\", url: \"\", component: Home },\r\n  { name: \"About Me\", url: \"about\", component: About },\r\n  { name: \"My Work\", url: \"work\", component: Work },\r\n  { name: \"Contacts\", url: \"contacts\", component: Contacts }\r\n];\r\n\r\nexport default class Index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPage: Pages[0].url\r\n    };\r\n  }\r\n  handleMenuClick = name => {\r\n    this.setState({ currentPage: name });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Menu\r\n          pages={Pages}\r\n          current={this.state.currentPage}\r\n          onClick={this.handleMenuClick}\r\n        />\r\n        <Switch>\r\n          {Pages.map(page => (\r\n            <Route\r\n              exact\r\n              path={\"/\" + page.url}\r\n              component={page.component}\r\n              key={page.url}\r\n            />\r\n          ))}\r\n          <Route component={Home} />\r\n        </Switch>\r\n        <footer id=\"main-footer\">Copyright &copy; 2020</footer>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <main id=\"about\">\r\n      <h1 className=\"lg-heading\">\r\n        About<span className=\"text-secondary\"> Me</span>\r\n      </h1>\r\n      <h2 className=\"sm-heading\">\r\n        Let me tell you a few things about myself :\r\n      </h2>\r\n      <div className=\"about-info\">\r\n        <div className=\"bio-image\">\r\n          <div className=\"portrait\"></div>\r\n        </div>\r\n        <div className=\"bio\">\r\n          <h3 className=\"text-secondary\">BIO</h3>\r\n          <p>\r\n            My name is Baptiste de Montangon, I am a first year engineering\r\n            student at <a href=\"https://en.esiea.fr/\">ESIEA</a> in Paris. Web\r\n            developpement is one of my greatest passion and I want to be a full\r\n            stack web developper in the future.\r\n          </p>\r\n        </div>\r\n        <div className=\"job job-1\">\r\n          <h3>Web developpement :</h3>\r\n          <p>\r\n            I am interested in programming since I'm 15 years old, I have been\r\n            looking into all sorts of programming languages but since I have\r\n            learned the basic of web developpement I want to become a Full Stack\r\n            Web developper.\r\n          </p>\r\n        </div>\r\n        <div className=\"job job-2\">\r\n          <h3>Here is My CV :</h3>\r\n          <p className=\"center\">\r\n            Click <a href=\"./MonCV.pdf\">here</a> to see my french CV\r\n          </p>\r\n        </div>\r\n        <div className=\"job job-3\">\r\n          <h3>Programming Languages :</h3>\r\n          <h5>here are all the languages I know and am confortable with :</h5>\r\n          <p>\r\n            HTML/CSS/SCSS/JS\r\n            <br />\r\n            React/React-native/nodeJS\r\n            <br />\r\n            Python\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import React from 'react';\nimport Index from \"./components/Index\"\nimport './main.css';\n\nfunction App() {\n  return (\n    <Index />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}